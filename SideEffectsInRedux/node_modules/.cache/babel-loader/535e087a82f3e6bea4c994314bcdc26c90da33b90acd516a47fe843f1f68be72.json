{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ajaydeep\\\\Desktop\\\\udemy\\\\SideEffectsInRedux\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  /* we want to conditionally render the Cart component based on uiSlice's state value\n  We execute this and then you learned that to use selector, we need to pass a function which receives \n  the Redux state automatically because this function which we pass to use selector will be executed by React Redux. \n  So it receives the current state automatically and we should return the data which we wanna use in this component.\n   And in this case, that is this cartIsVisible property value. */\n\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n\n  //handling async task\n  useEffect(() => {\n    fetch('https://react-req-93ea7-default-rtdb.firebaseio.com/cart.json', {\n      method: 'PUT',\n      body: JSON.stringify(cart)\n    });\n  }, [cart]);\n\n  /*   when using useEffect the way we currently do it: It will execute when our app starts.\n  \n  Why is this an issue?\n  \n  It's a problem because this will send the initial (i.e. empty) cart to our backend and overwrite any data stored there.\n   */\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KyXbg3VUjMrWtfZdDW0tXImD8Js=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useEffect","useSelector","useDispatch","Cart","Layout","Products","uiActions","Notification","isInitial","App","showCart","state","ui","cartIsVisible","cart","fetch","method","body","JSON","stringify"],"sources":["C:/Users/Ajaydeep/Desktop/udemy/SideEffectsInRedux/src/App.js"],"sourcesContent":["import { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\n\nlet isInitial = true;\n\nfunction App() {\n/* we want to conditionally render the Cart component based on uiSlice's state value\nWe execute this and then you learned that to use selector, we need to pass a function which receives \nthe Redux state automatically because this function which we pass to use selector will be executed by React Redux. \nSo it receives the current state automatically and we should return the data which we wanna use in this component.\n And in this case, that is this cartIsVisible property value. */\n\n  const showCart = useSelector((state)=> state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  \n  //handling async task\n  useEffect(() => {\n    fetch('https://react-req-93ea7-default-rtdb.firebaseio.com/cart.json', {\n      method: 'PUT',\n      body: JSON.stringify(cart),\n    });\n  }, [cart]); \n  \n/*   when using useEffect the way we currently do it: It will execute when our app starts.\n\nWhy is this an issue?\n\nIt's a problem because this will send the initial (i.e. empty) cart to our backend and overwrite any data stored there.\n */\n\n  return (\n    <Layout>\n    { showCart && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,8BAA8B;AAAC;AAExD,IAAIC,SAAS,GAAG,IAAI;AAEpB,SAASC,GAAG,GAAG;EAAA;EACf;AACA;AACA;AACA;AACA;;EAEE,MAAMC,QAAQ,GAAGT,WAAW,CAAEU,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC9D,MAAMC,IAAI,GAAGb,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACG,IAAI,CAAC;;EAE/C;EACAd,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,+DAA+D,EAAE;MACrEC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC;EACJ,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;;EAEZ;AACA;AACA;AACA;AACA;AACA;;EAEE,oBACE,QAAC,MAAM;IAAA,WACLJ,QAAQ,iBAAI,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eACpB,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEb;AAAC,GA/BQD,GAAG;EAAA,QAOOR,WAAW,EACfA,WAAW;AAAA;AAAA,KARjBQ,GAAG;AAiCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}