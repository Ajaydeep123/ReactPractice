{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    //we'll also use additional info other than item and totalQuantity when adding items to cart. So, we'll have to use payload too.\n    addItemsToCart(state, action) {\n      const newItem = action.payload;\n      const existingItme = state.items.find(i);\n    },\n    removeItemFromCart(state, action) {}\n  }\n});","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemsToCart","state","action","newItem","payload","existingItme","find","i","removeItemFromCart"],"sources":["C:/Users/Ajaydeep/Desktop/udemy/SideEffectsInRedux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState : {\r\n        items: [],\r\n        totalQuantity: 0,\r\n    },\r\n\r\n    reducers: {\r\n//we'll also use additional info other than item and totalQuantity when adding items to cart. So, we'll have to use payload too.\r\n        addItemsToCart(state, action){\r\n            const newItem = action.payload;\r\n            const existingItme = state.items.find((i))\r\n\r\n        },\r\n\r\n        removeItemFromCart(state, action){\r\n\r\n        }\r\n\r\n    }\r\n})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAG;IACXC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACnB,CAAC;EAEDC,QAAQ,EAAE;IACd;IACQC,cAAc,CAACC,KAAK,EAAEC,MAAM,EAAC;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,CAAC,CAAE;IAE9C,CAAC;IAEDC,kBAAkB,CAACP,KAAK,EAAEC,MAAM,EAAC,CAEjC;EAEJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}